{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1654914244793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1654914328649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,15 +3,15 @@\n const path = require('path');\n const cookieParser = require('cookie-parser');\n const logger = require('morgan');\n const morgan = require('morgan');\n-\n const winston = require('./config/winston');\n //Loads the handlebars module \n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n //new\n require('./app_api/database/db'); // causes database module be imported and executed when statting up\n+require('./app_api/database/db'); // causes database module be imported and executed when statting up\n //const index = require('./routes/index');\n //const users = require('./routes/users');\n \n const indexRouter = require('./routes/index');\n"
                },
                {
                    "date": 1654914335794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n const winston = require('./config/winston');\n //Loads the handlebars module \n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n-//new\n+//new //\n require('./app_api/database/db'); // causes database module be imported and executed when statting up\n-require('./app_api/database/db'); // causes database module be imported and executed when statting up\n+//require('./app_api/database/db'); // causes database module be imported and executed when statting up\n //const index = require('./routes/index');\n //const users = require('./routes/users');\n \n const indexRouter = require('./routes/index');\n"
                },
                {
                    "date": 1654914346599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n const winston = require('./config/winston');\n //Loads the handlebars module \n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n-//new //\n-require('./app_api/database/db'); // causes database module be imported and executed when statting up\n+//new //FIXME\n+require('./app_api/models/db'); // causes database module be imported and executed when statting up\n //require('./app_api/database/db'); // causes database module be imported and executed when statting up\n //const index = require('./routes/index');\n //const users = require('./routes/users');\n \n"
                },
                {
                    "date": 1654914359757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,11 +10,10 @@\n \n //new //FIXME\n require('./app_api/models/db'); // causes database module be imported and executed when statting up\n //require('./app_api/database/db'); // causes database module be imported and executed when statting up\n-//const index = require('./routes/index');\n-//const users = require('./routes/users');\n \n+\n const indexRouter = require('./routes/index');\n //console.log(indexRouter);\n const usersRouter = require('./routes/users');\n const travelRouter = require('./routes/travel'); // make new contstant for the app to use for the travel page\n"
                },
                {
                    "date": 1654914378040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,18 +13,17 @@\n //require('./app_api/database/db'); // causes database module be imported and executed when statting up\n \n \n const indexRouter = require('./routes/index');\n-//console.log(indexRouter);\n const usersRouter = require('./routes/users');\n const travelRouter = require('./routes/travel'); // make new contstant for the app to use for the travel page\n const aboutRouter = require('./routes/about');\n const roomsRouter = require('./routes/rooms');\n const mealsRouter = require('./routes/meals');\n const newsRouter = require('./routes/news');\n const contactRouter = require('./routes/contact');\n \n-\n+//new admin\n const apiRouter = require('./app_api/routes/index');\n \n const app = express();\n \n"
                },
                {
                    "date": 1654914402219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n const mealsRouter = require('./routes/meals');\n const newsRouter = require('./routes/news');\n const contactRouter = require('./routes/contact');\n \n-//new admin\n+//new admin \n const apiRouter = require('./app_api/routes/index');\n \n const app = express();\n \n@@ -31,10 +31,8 @@\n app.engine(\"handlebars\", engine()); // calls the deconstructed express object line 7\n //Sets our app to use the handlebars engine\n app.set(\"view engine\", \"handlebars\");\n \n-// The app object is instantiated on creation of the Express server. It has a middleware stack that can be customized in\n-//app.use(logger('dev'));\n \n app.use(express.json());\n app.use(express.urlencoded({ extended: false }));\n app.use(cookieParser());\n"
                },
                {
                    "date": 1654914408963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,12 @@\n \n app.use(express.json());\n app.use(express.urlencoded({ extended: false }));\n app.use(cookieParser());\n-//FIXME\n+\n app.use(express.static(path.join(__dirname, 'public')));\n \n+\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914419216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,10 @@\n app.use(cookieParser());\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n-\n+//FIXME old\n+app\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914428975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app\n+app.use'()\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914435278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use'()\n+app.use('/')\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914440653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use('/')\n+app.use('/api, api')\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914447999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use('/api, api')\n+app.use('/api'api)\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914455363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use('/api'api)\n+app.use('/api'apiRouter);\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914461063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use('/api'apiRouter);\n+app.use('/api' apiRouter);\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914482220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n const roomsRouter = require('./routes/rooms');\n const mealsRouter = require('./routes/meals');\n const newsRouter = require('./routes/news');\n const contactRouter = require('./routes/contact');\n-\n+const apiRouter = require('./app_api/routes/index');\n //new admin \n const apiRouter = require('./app_api/routes/index');\n \n const app = express();\n"
                },
                {
                    "date": 1654914506456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n const roomsRouter = require('./routes/rooms');\n const mealsRouter = require('./routes/meals');\n const newsRouter = require('./routes/news');\n const contactRouter = require('./routes/contact');\n-const apiRouter = require('./app_api/routes/index');\n+\n //new admin \n const apiRouter = require('./app_api/routes/index');\n \n const app = express();\n"
                },
                {
                    "date": 1654914531346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n //FIXME old\n-app.use('/api' apiRouter);\n+\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914538516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,10 @@\n app.use(cookieParser());\n \n app.use(express.static(path.join(__dirname, 'public')));\n \n-//FIXME old\n \n+\n //allow CORS for angular and express\n app.use('/api', (req, res, next) => {\n   res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n   res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n"
                },
                {
                    "date": 1654914775920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //Loads the handlebars module \n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n //new //FIXME\n-require('./app_api/models/db'); // causes database module be imported and executed when statting up\n+//require('./app_api/models/db'); // causes database module be imported and executed when statting up\n //require('./app_api/database/db'); // causes database module be imported and executed when statting up\n \n \n const indexRouter = require('./routes/index');\n"
                },
                {
                    "date": 1654914782037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n //new //FIXME\n //require('./app_api/models/db'); // causes database module be imported and executed when statting up\n-//require('./app_api/database/db'); // causes database module be imported and executed when statting up\n+require('./app_api/database/db'); // causes database module be imported and executed when statting up\n \n \n const indexRouter = require('./routes/index');\n const usersRouter = require('./routes/users');\n"
                },
                {
                    "date": 1654914852367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n //Loads the handlebars module \n const { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n \n //new //FIXME\n-//require('./app_api/models/db'); // causes database module be imported and executed when statting up\n+require('./app_api/models/db'); // causes database module be imported and executed when statting up\n require('./app_api/database/db'); // causes database module be imported and executed when statting up\n \n \n const indexRouter = require('./routes/index');\n"
                }
            ],
            "date": 1654914244793,
            "name": "Commit-0",
            "content": "const createError = require('http-errors');\nconst express = require('express');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\nconst morgan = require('morgan');\n\nconst winston = require('./config/winston');\n//Loads the handlebars module \nconst { engine } = require(\"express-handlebars\"); //  //https://stackoverflow.com/questions/59124092/hbs-is-not-define-in-node-js\n\n//new\nrequire('./app_api/database/db'); // causes database module be imported and executed when statting up\n//const index = require('./routes/index');\n//const users = require('./routes/users');\n\nconst indexRouter = require('./routes/index');\n//console.log(indexRouter);\nconst usersRouter = require('./routes/users');\nconst travelRouter = require('./routes/travel'); // make new contstant for the app to use for the travel page\nconst aboutRouter = require('./routes/about');\nconst roomsRouter = require('./routes/rooms');\nconst mealsRouter = require('./routes/meals');\nconst newsRouter = require('./routes/news');\nconst contactRouter = require('./routes/contact');\n\n\nconst apiRouter = require('./app_api/routes/index');\n\nconst app = express();\n\n//---------- view engine setup------\napp.engine(\"handlebars\", engine()); // calls the deconstructed express object line 7\n//Sets our app to use the handlebars engine\napp.set(\"view engine\", \"handlebars\");\n\n// The app object is instantiated on creation of the Express server. It has a middleware stack that can be customized in\n//app.use(logger('dev'));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\n//FIXME\napp.use(express.static(path.join(__dirname, 'public')));\n\n//allow CORS for angular and express\napp.use('/api', (req, res, next) => {\n  res.header('Access-Control-Allow-Origin', 'http://localhost:4200');\n  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n  next();\n});\n\napp.use(\"/\", indexRouter);\napp.use(\"/users\", usersRouter);\napp.use(\"/travel\", travelRouter); // use new travel app page, this adds the new travelRouter\napp.use(\"/about\", aboutRouter);\napp.use(\"/rooms\", roomsRouter);\napp.use(\"/meals\", mealsRouter);\napp.use(\"/news\", newsRouter);\napp.use(\"/contact\", contactRouter);\n\n//new\napp.use(\"/api\", apiRouter);\n\n// winston and morgan logging\napp.use(morgan('combined'));\napp.use(morgan('combined', { stream: winston.stream }));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n//Initializing logger\n//loggerMean.init(app);\napp.use(morgan('combined'));\nmorgan('tiny');\nmorgan(':method :url :status :res[content-length] - :response-time ms');\n\nmorgan(function (tokens, req, res) {\n  return [\n    tokens.method(req, res),\n    tokens.url(req, res),\n    tokens.status(req, res),\n    tokens.res(req, res, 'content-length'), '-',\n    tokens['response-time'](req, res), 'ms'\n  ].join(' ')\n});\n\napp.use(morgan('combined'));\n\n\nmorgan('tiny');\nmorgan(':method :url :status :res[content-length] - :response-time ms');\n\nmorgan(function (tokens, req, res) {\n  return [\n    tokens.method(req, res),\n    tokens.url(req, res),\n    tokens.status(req, res),\n    tokens.res(req, res, 'content-length'), '-',\n    tokens['response-time'](req, res), 'ms'\n  ].join(' ')\n});\n\n// EXAMPLE: only log error responses\nmorgan('combined', {\n  skip: function (req, res) { return res.statusCode < 400 }\n});\n\n\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // add this line to include winston logging\n  winston.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n\nmodule.exports = app;\n\n\n\n\n//Nodemon for auto start npm \n// in packages.json add script  \n//npm i -D nodemon \n// npm run get \n//npm run dev \n// \n// FILE STRUCTURE NOTES\n// the routes and views is now in the main path that is the default of the route of  handlebars\n//https://www.npmjs.com/package/express-handlebars\n\n// set up handlebars\n//https://waelyasmina.medium.com/a-guide-into-using-handlebars-with-your-express-js-application-22b944443b65\n\n// ------javascript curly brackets deconstruct-----\n//used to destructure the JavaScript Object \n//https://www.geeksforgeeks.org/what-is-the-use-of-curly-brackets-in-the-var-statements/\n\n// let example_object = {\n//   name: \"Object\",\n//   platform: \"GeeksForGeeks\",\n//   number: 100\n// };\n\n// let {name, platform, number} = example_object;\n\n// console.log(\"Name: \", name);\n\n//https://stackoverflow.com/questions/11321635/nodejs-express-what-is-app-use\n\n//https://www.tabnine.com/code/javascript/modules/express-handlebars\n//hbs module\n//https://www.geeksforgeeks.org/handlebars-templating-in-expressjs/\n//https://stackabuse.com/guide-to-handlebars-templating-engine-for-node/\n\n// seedgoose\n//https://github.com/victorteokw/seedgoose#readme\n//npm cache clean -force: Cleaning your cache will resolve potential conflicts with previously installed packages.\n//JSONLint  \n\napp.use(morgan('combined'));\n\napp.get('/', function (req, res) {\n  res.send('hello, world!')\n});\n\nmorgan('tiny');\nmorgan(':method :url :status :res[content-length] - :response-time ms');\n\nmorgan(function (tokens, req, res) {\n  return [\n    tokens.method(req, res),\n    tokens.url(req, res),\n    tokens.status(req, res),\n    tokens.res(req, res, 'content-length'), '-',\n    tokens['response-time'](req, res), 'ms'\n  ].join(' ')\n});\n\n// EXAMPLE: only log error responses\nmorgan('combined', {\n  skip: function (req, res) { return res.statusCode < 400 }\n});\n"
        }
    ]
}